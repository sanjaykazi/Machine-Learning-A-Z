# -*- coding: utf-8 -*-
"""DecisionTreeRegression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jwq81KIh3ESW-A5oEWPSNmx4AEhxRmpg

#Decision Tree Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""#Training Decision Tree Regression model on the whole dataset"""

from sklearn.tree import DecisionTreeRegressor
regressor = DecisionTreeRegressor(random_state = 0)
regressor.fit(X,y)

"""#Predicting a new result"""

regressor.predict([[6.5]])

"""#Visualising the Decision Tree Regression results (higher resolution)"""

x_grid = np.arange(min(X),max(X), 0.1)
x_grid = x_grid.reshape((len(x_grid),1))
plt.scatter(X,y,color='g')
plt.plot(x_grid, regressor.predict(x_grid))
plt.title('Truth or Bluff(SVR)')
plt.xlabel('Position Label')
plt.ylabel('Salary')
plt.show()

"""###Low resolutoin graph makes no sense as since we only made prediction of integers and it just denotes the real salary whuch is an overfitting of the data which is not a good practice in data science"""

plt.scatter(X,y,color='g')
p = np.arange(10,1,1)
q = np.arange(10,1,1)
plt.plot(X, regressor.predict(X))
plt.title('Truth or Bluff(SVR)')
plt.xlabel('Position Label')
plt.plot(p,q,color='r')
plt.ylabel('Salary')
plt.show()

