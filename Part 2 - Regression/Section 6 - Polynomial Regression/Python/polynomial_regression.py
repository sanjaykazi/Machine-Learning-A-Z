# -*- coding: utf-8 -*-
"""Polynomial_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ap7pJjRX-O5j4R4quz9hhZ74v6Dynchn

#Polynomial Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_csv('Position_Salaries.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

"""## Splitting the dataset into the Training set and Test set"""

#from sklearn.model_selection import train_test_split
#X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)


# This data has very little feature and we can ignore splitting

"""#Training the Linear Regression model on the whole dataset."""

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X,y)

"""#Training the Polynomial Regression model ont he whole dataset"""

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree = 4)
X_poly = poly_reg.fit_transform(X)
lin_reg_2 = LinearRegression()
lin_reg_2.fit(X_poly,y)

"""#Visualising the Linear Regression results"""

import matplotlib.pyplot as plt
plt.scatter(X,y,color='g')
plt.plot(X,regressor.predict(X))
plt.title('Truth or Bluff(PRM)')
plt.xlabel('Position Label')
plt.ylabel('Salary')
plt.show()

"""#Visualising the Polynomial Regression results"""

import matplotlib.pyplot as plt
plt.scatter(X,y,color='g')
plt.plot(X,lin_reg_2.predict(X_poly))
plt.title('Truth or Bluff(LRM)')
plt.xlabel('Position Label')
plt.ylabel('Salary')
plt.show()

"""#Visualising the polynomial Regression results (for higher resolutions and smoother curve)"""

x_grid = np.arange(min(X),max(X), 0.1)
x_grid = x_grid.reshape((len(x_grid),1))
plt.scatter(X,y,color='g')
plt.plot(x_grid, lin_reg_2.predict(poly_reg.fit_transform(x_grid)))
plt.title('Truth or Bluff(LRM)')
plt.xlabel('Position Label')
plt.ylabel('Salary')
plt.show()

"""Predicting a new result value with Linear regression"""

print(regressor.predict([[6.5]]))

"""Predicting a new result value with polynomial regression"""

print(lin_reg_2.predict(poly_reg.fit_transform([[6.5]])))